openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /accounts/get_auth_token/:
    post:
      operationId: accounts_get_auth_token_create
      description: ''
      tags:
      - accounts
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /photos/events/:
    get:
      operationId: photos_events_list
      description: API endpoint for Events.
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
    post:
      operationId: photos_events_create
      description: API endpoint for Events.
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /photos/events/{id}/:
    get:
      operationId: photos_events_retrieve
      description: API endpoint for Events.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ereignis.
        required: true
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: photos_events_update
      description: API endpoint for Events.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ereignis.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: photos_events_partial_update
      description: API endpoint for Events.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ereignis.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: photos_events_destroy
      description: API endpoint for Events.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ereignis.
        required: true
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /photos/imports/:
    get:
      operationId: photos_imports_list
      description: API endpoint for Imports.
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Import'
          description: ''
    post:
      operationId: photos_imports_create
      description: API endpoint for Imports.
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Import'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Import'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Import'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: ''
  /photos/imports/{id}/:
    get:
      operationId: photos_imports_retrieve
      description: API endpoint for Imports.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Import.
        required: true
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: ''
    put:
      operationId: photos_imports_update
      description: API endpoint for Imports.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Import.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Import'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Import'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Import'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: ''
    patch:
      operationId: photos_imports_partial_update
      description: API endpoint for Imports.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Import.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImport'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: ''
    delete:
      operationId: photos_imports_destroy
      description: API endpoint for Imports.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Import.
        required: true
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /photos/photo_exif/:
    get:
      operationId: photos_photo_exif_list
      description: API endpoint for EXIF-Data.
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhotoEXIF'
          description: ''
    post:
      operationId: photos_photo_exif_create
      description: API endpoint for EXIF-Data.
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhotoEXIF'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhotoEXIF'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhotoEXIF'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhotoEXIF'
          description: ''
  /photos/photo_exif/{id}/:
    get:
      operationId: photos_photo_exif_retrieve
      description: API endpoint for EXIF-Data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Foto.
        required: true
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhotoEXIF'
          description: ''
    put:
      operationId: photos_photo_exif_update
      description: API endpoint for EXIF-Data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Foto.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhotoEXIF'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhotoEXIF'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhotoEXIF'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhotoEXIF'
          description: ''
    patch:
      operationId: photos_photo_exif_partial_update
      description: API endpoint for EXIF-Data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Foto.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPhotoEXIF'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPhotoEXIF'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPhotoEXIF'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhotoEXIF'
          description: ''
    delete:
      operationId: photos_photo_exif_destroy
      description: API endpoint for EXIF-Data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Foto.
        required: true
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /photos/photos/:
    get:
      operationId: photos_photos_list
      description: API endpoint for Photos.
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Photo'
          description: ''
    post:
      operationId: photos_photos_create
      description: API endpoint for Photos.
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Photo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Photo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Photo'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
  /photos/photos/{id}/:
    get:
      operationId: photos_photos_retrieve
      description: API endpoint for Photos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Foto.
        required: true
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
    put:
      operationId: photos_photos_update
      description: API endpoint for Photos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Foto.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Photo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Photo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Photo'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
    patch:
      operationId: photos_photos_partial_update
      description: API endpoint for Photos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Foto.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPhoto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPhoto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPhoto'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
    delete:
      operationId: photos_photos_destroy
      description: API endpoint for Photos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Foto.
        required: true
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /photos/tags/:
    get:
      operationId: photos_tags_list
      description: API endpoint for Tags.
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
    post:
      operationId: photos_tags_create
      description: API endpoint for Tags.
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /photos/tags/{id}/:
    get:
      operationId: photos_tags_retrieve
      description: API endpoint for Tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: photos_tags_update
      description: API endpoint for Tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: photos_tags_partial_update
      description: API endpoint for Tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: photos_tags_destroy
      description: API endpoint for Tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /photos/users/:
    get:
      operationId: photos_users_list
      description: API endpoint for Users.
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: photos_users_create
      description: API endpoint for Users.
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /photos/users/{id}/:
    get:
      operationId: photos_users_retrieve
      description: API endpoint for Users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Benutzer.
        required: true
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: photos_users_update
      description: API endpoint for Users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Benutzer.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: photos_users_partial_update
      description: API endpoint for Users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Benutzer.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: photos_users_destroy
      description: API endpoint for Users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Benutzer.
        required: true
      tags:
      - photos
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Event:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
      - url
    Import:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        timestamp:
          type: string
          format: date-time
      required:
      - id
      - name
      - timestamp
      - url
    PatchedEvent:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
    PatchedImport:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        timestamp:
          type: string
          format: date-time
    PatchedPhoto:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        timestamp:
          type: string
          format: date-time
          nullable: true
        uploaded:
          type: string
          format: date-time
          readOnly: true
        uploaded_by:
          type: string
          format: uri
        address:
          type: object
          additionalProperties: {}
          nullable: true
        event:
          type: string
          format: uri
          nullable: true
        upload:
          type: string
          format: uri
          nullable: true
        tags:
          type: array
          items:
            type: string
            format: uri
        imagefile:
          type: string
          maxLength: 255
    PatchedPhotoEXIF:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        exif:
          type: object
          additionalProperties: {}
    PatchedTag:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
    PatchedUser:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description: Erforderlich. 150 Zeichen oder weniger. Nur Buchstaben, Ziffern
            und @/./+/-/_.
          pattern: ^[\w.@+-]+\Z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        full_name:
          type: string
          readOnly: true
    Photo:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        timestamp:
          type: string
          format: date-time
          nullable: true
        uploaded:
          type: string
          format: date-time
          readOnly: true
        uploaded_by:
          type: string
          format: uri
        address:
          type: object
          additionalProperties: {}
          nullable: true
        event:
          type: string
          format: uri
          nullable: true
        upload:
          type: string
          format: uri
          nullable: true
        tags:
          type: array
          items:
            type: string
            format: uri
        imagefile:
          type: string
          maxLength: 255
      required:
      - id
      - name
      - uploaded
      - uploaded_by
      - url
    PhotoEXIF:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        exif:
          type: object
          additionalProperties: {}
      required:
      - exif
      - id
      - url
    Tag:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
      - url
    User:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description: Erforderlich. 150 Zeichen oder weniger. Nur Buchstaben, Ziffern
            und @/./+/-/_.
          pattern: ^[\w.@+-]+\Z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        full_name:
          type: string
          readOnly: true
      required:
      - full_name
      - url
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
